# GitHub Actions workflow to cross-compile tinyalsa-ndk with Android NDK,
# targeting Android 15 (API 35). If the selected NDK does not accept android-35,
# the job will retry with APP_PLATFORM=latest as a fallback.
name: CI / Android NDK Build (Android 15)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-android:
    name: Build (Android NDK)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        abi: [arm64-v8a, armeabi-v7a]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl

      - name: Download Android NDK r26b
        # r26b chosen to support newer Android API levels (Android 15 / API 35)
        run: |
          set -eux
          NDK_VERSION="r26b"
          NDK_ZIP="android-ndk-${NDK_VERSION}-linux.zip"
          NDK_URL="https://dl.google.com/android/repository/${NDK_ZIP}"
          curl -fsSL "$NDK_URL" -o "$NDK_ZIP"
          unzip -q "$NDK_ZIP" -d $HOME
          echo "ANDROID_NDK_HOME=$HOME/android-ndk-${NDK_VERSION}" >> $GITHUB_ENV
          echo "$HOME/android-ndk-${NDK_VERSION}" > ndk-path.txt

      - name: Show ndk-build path
        run: |
          echo "NDK path: $ANDROID_NDK_HOME"
          ls -la "$ANDROID_NDK_HOME"

      - name: Run ndk-build for ABI (target Android 15 / API 35, fallback to latest)
        env:
          ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}
        run: |
          set -eux
          TARGET_API="android-35"
          ABI="${{ matrix.abi }}"
          export PATH="$ANDROID_NDK_HOME:$PATH"
          if [ ! -x "$ANDROID_NDK_HOME/ndk-build" ]; then
            echo "ndk-build not found at $ANDROID_NDK_HOME/ndk-build"
            exit 1
          fi
          echo "Attempting ndk-build for ABI=${ABI} APP_PLATFORM=${TARGET_API}"
          if "$ANDROID_NDK_HOME/ndk-build" -j$(nproc) NDK_PROJECT_PATH=. APP_ABI="${ABI}" APP_PLATFORM="${TARGET_API}" NDK_OUT=out/ndk-out NDK_LIBS_OUT=libs; then
            echo "ndk-build succeeded with APP_PLATFORM=${TARGET_API}"
          else
            echo "ndk-build failed with APP_PLATFORM=${TARGET_API}, retrying with APP_PLATFORM=latest"
            if "$ANDROID_NDK_HOME/ndk-build" -j$(nproc) NDK_PROJECT_PATH=. APP_ABI="${ABI}" APP_PLATFORM="latest" NDK_OUT=out/ndk-out NDK_LIBS_OUT=libs; then
              echo "ndk-build succeeded with APP_PLATFORM=latest"
            else
              echo "ndk-build failed with both APP_PLATFORM=${TARGET_API} and APP_PLATFORM=latest"
              exit 1
            fi
          fi

      - name: List produced libraries
        run: |
          echo "libs directory contents:"
          if [ -d libs ]; then
            find libs -maxdepth 3 -type f -print || true
          else
            echo "No libs/ directory produced."
          fi

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tinyalsa-android-${{ matrix.abi }}
          path: |
            libs/${{ matrix.abi }}/**
            out/ndk-out/**
